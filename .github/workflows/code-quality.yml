name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for SonarCloud
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript strict check
      run: npx tsc --noEmit --strict
      
    - name: Run ESLint with detailed output
      run: npx eslint . --ext .ts,.tsx --format json --output-file eslint-report.json
      continue-on-error: true
      
    - name: Run Prettier check
      run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"
      
    - name: Check for TODO/FIXME comments
      run: |
        echo "Checking for TODO/FIXME comments..."
        grep -r "TODO\|FIXME\|XXX\|HACK" src/ || echo "No TODO/FIXME comments found"
        
    - name: Check bundle size
      run: |
        npm run build
        npx bundlesize
        
    - name: Run complexity analysis
      run: |
        npx complexity-report --format json --output complexity-report.json src/
      continue-on-error: true
      
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
    - name: Upload reports
      uses: actions/upload-artifact@v3
      with:
        name: quality-reports
        path: |
          eslint-report.json
          complexity-report.json
          coverage/
        retention-days: 30

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Check for outdated dependencies
      run: npm outdated || true
      
    - name: Check for security vulnerabilities
      run: npm audit --audit-level=moderate
      
    - name: Check for duplicate dependencies
      run: npx npm-check-duplicates
      
    - name: License compliance check
      run: npx license-checker --summary

  performance-check:
    name: Performance Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build
      
    - name: Analyze bundle
      run: |
        npx webpack-bundle-analyzer dist/assets/*.js --report --mode static --report-filename bundle-report.html
      continue-on-error: true
      
    - name: Check for large files
      run: |
        echo "Files larger than 1MB:"
        find dist/ -type f -size +1M -exec ls -lh {} \; || echo "No large files found"
        
    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      with:
        name: performance-reports
        path: |
          bundle-report.html
        retention-days: 7
